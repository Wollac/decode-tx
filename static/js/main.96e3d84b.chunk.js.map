{"version":3,"sources":["index.js"],"names":["TransactionForm","props","state","trytes","txObject","handleChange","bind","handleSubmit","event","this","setState","target","value","preventDefault","_parseTransaction","err","alert","asTransactionObject","timestamp","Date","attachmentTimestamp","attachmentTimestampLowerBound","attachmentTimestampUpperBound","onSubmit","id","onChange","cols","rows","src","name","theme","collapseStringsAfterLength","React","Component","ReactDOM","render","document","getElementById"],"mappings":"6PAOMA,G,wDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,OAAQ,GACRC,SAAU,IAGZ,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBARH,E,yDAWNE,GACXC,KAAKC,SAAS,CAAEP,OAAQK,EAAMG,OAAOC,U,mCAG1BJ,GACXA,EAAMK,iBACN,IACE,IAAMT,EAAWK,KAAKK,kBAAkBL,KAAKP,MAAMC,QACnDM,KAAKC,SAAS,CAAEN,aAChB,MAAOW,GACPC,MAAMD,M,wCAIQZ,GAChB,IAAMC,EAAWa,8BAAoBd,GAYrC,OAVAC,EAASc,UAAY,IAAIC,KAA0B,IAArBf,EAASc,WAEvCd,EAASgB,oBAAsB,IAAID,KAAKf,EAASgB,qBACjDhB,EAASiB,8BAAgC,IAAIF,KAC3Cf,EAASiB,+BAEXjB,EAASkB,8BAAgC,IAAIH,KAC3Cf,EAASkB,+BAGJlB,I,+BAIP,OACE,6BACE,0DACA,kDACA,0BAAMmB,SAAUd,KAAKF,cACnB,8BACEiB,GAAG,cACHZ,MAAOH,KAAKP,MAAMC,OAClBsB,SAAUhB,KAAKJ,aACfqB,KAAM,GACNC,KAAM,KAER,4CAEF,6BACE,kDACA,kBAAC,IAAD,CACEC,IAAKnB,KAAKP,MAAME,SAChByB,MAAM,EACNC,MAAM,cACNC,2BAA4B,W,GA/DVC,IAAMC,YAuEpCC,IAASC,OAAO,kBAACnC,EAAD,MAAqBoC,SAASC,eAAe,U","file":"static/js/main.96e3d84b.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport ReactJson from 'react-json-view';\nimport { asTransactionObject } from '@iota/transaction-converter';\n\nimport './index.css';\n\nclass TransactionForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      trytes: '',\n      txObject: {}\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({ trytes: event.target.value });\n  }\n\n  handleSubmit(event) {\n    event.preventDefault();\n    try {\n      const txObject = this._parseTransaction(this.state.trytes);\n      this.setState({ txObject });\n    } catch (err) {\n      alert(err);\n    }\n  }\n\n  _parseTransaction(trytes) {\n    const txObject = asTransactionObject(trytes);\n\n    txObject.timestamp = new Date(txObject.timestamp * 1000);\n\n    txObject.attachmentTimestamp = new Date(txObject.attachmentTimestamp);\n    txObject.attachmentTimestampLowerBound = new Date(\n      txObject.attachmentTimestampLowerBound\n    );\n    txObject.attachmentTimestampUpperBound = new Date(\n      txObject.attachmentTimestampUpperBound\n    );\n\n    return txObject;\n  }\n\n  render() {\n    return (\n      <div>\n        <h2>Convert Transaction Trytes</h2>\n        <h3>Transaction Trytes</h3>\n        <form onSubmit={this.handleSubmit}>\n          <textarea\n            id=\"trytesinput\"\n            value={this.state.trytes}\n            onChange={this.handleChange}\n            cols={95}\n            rows={28}\n          />\n          <button>Convert</button>\n        </form>\n        <div>\n          <h3>Transaction Object</h3>\n          <ReactJson\n            src={this.state.txObject}\n            name={false}\n            theme=\"rjv-default\"\n            collapseStringsAfterLength={81}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nReactDOM.render(<TransactionForm />, document.getElementById('root'));\n"],"sourceRoot":""}